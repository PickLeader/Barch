#!/bin/bash

# version
VERSION=6.1

PACKAGES="perl lvm2 kpartx parted ncftp make gcc duplicity curl expat libexpat1 libexpat1-dev"
PERL_MODULES="AnyEvent JSON POSIX XML::Simple List::Util Sys::Syslog Time::Piece Net::OpenSSH Getopt::Long Config::Tiny Twiggy::Server AnyEvent::Util File::Lockfile File::Find::Rule Digest::MD5 Time::HiRes Switch"
TOOLS="perl lvm kpartx ncftp duplicity make parted"
NEW_INSTALL=true

clear

echo "Welcome to Barch ${VERSION}.x Install Tool"
echo ""
echo "Please make sure you have the following packages installed:"
echo "  apt-get install / yum install "
echo "  $PACKAGES"
echo ""
echo "For Ubuntu users, add the following repository:"
echo "  apt-add-repository ppa:duplicity-team/ppa"
echo ""
echo "Press 'N' or CTRL+C to stop or press 'Y' to continue..."
read ANSWER

if [[ $ANSWER =~ ^[Yy]$ ]]
then

    for i in $TOOLS; do
        if ! which $i > /dev/null; then
            echo "$i is required."
            exit 2
        fi
    done

    if [ -f /etc/barch/barch ]; then
        NEW_INSTALL=false
    fi

    clear
    echo "Barch - LVM Backup Manager"

    if ! which cpanm > /dev/null; then
        echo "├ cpanm not installed"
        echo "│ installing..."
        curl -L http://cpanmin.us | perl - --sudo App::cpanminus > /dev/null
    else
        echo "├ cpanm installed"
    fi

    echo "├ installing Perl-modules"

    for i in $PERL_MODULES; do
        echo -n "│ * installing $i"
        cpanm $i > /dev/null
        if [ $? -ne 0 ]; then
            echo " - failed"
            echo "Failed to install $i module"
            exit 2
        else
            echo " - done"
        fi
    done

    echo -n "├ creating directories..."

    mkdir -p /etc/barch
    mkdir -p /usr/local/backup
    mkdir -p /var/cache/barch/mounts
    mkdir -p /var/lock/barch

    echo " done"
    echo -n "├ copying files..."

    cp -ax barch /etc/barch/
    cp -ax monitor.pl /etc/barch/

    echo " done"
    echo -n "├ creating symbolic links..."

    if [ ! -f /usr/local/bin/barch ]; then
        ln -s /etc/barch/barch /usr/local/bin/barch
    fi

    echo " done"
    echo -n "├ copying configuration..."

    if [ ! -f /etc/barch/barch.conf ]; then
        cp -ax barch.conf /etc/barch/
    else
        cp -ax barch.conf /etc/barch/barch.conf.NEW
    fi

    if [ ! -f /etc/barch/custom.conf ]; then
        cp -ax custom.conf /etc/barch/
    else
        cp -ax custom.conf /etc/barch/custom.conf.NEW
    fi

    cp -ax version /etc/barch 

    echo " done"

    cp -ax init.d/barchd /etc/init.d/barchd
    chmod +x /etc/init.d/barchd

    echo ""
    echo "Installation complete"

    if [[ $NEW_INSTALL -eq 'false' ]]; then
        echo "A newer version installed. Please verify that you old configuration file is up-to-date."
        echo "Use barch.conf.NEW and custom.conf.NEW as an example."
    fi
    
    echo ""
else
    echo ""
    echo "Come back later"
    exit 1
fi
